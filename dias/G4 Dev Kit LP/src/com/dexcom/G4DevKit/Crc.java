/*     */ package com.dexcom.G4DevKit;
/*     */ 
/*     */ import java.util.zip.CRC32;
/*     */ 
/*     */ class Crc
/*     */ {
/*  90 */   private static byte[] m_crc8Table = { 
/*  91 */     0, 7, 14, 9, 28, 27, 18, 21, 56, 63, 54, 
/*  92 */     49, 36, 35, 42, 45, 112, 119, 126, 121, 108, 107, 
/*  93 */     98, 101, 72, 79, 70, 65, 84, 83, 90, 93, 
/*  94 */     -32, -25, -18, -23, -4, 
/*  95 */     -5, -14, -11, -40, -33, 
/*  96 */     -42, -47, -60, -61, -54, 
/*  97 */     -51, -112, -105, -98, -103, 
/*  98 */     -116, -117, -126, -123, -88, 
/*  99 */     -81, -90, -95, -76, -77, 
/* 100 */     -70, -67, -57, -64, -55, 
/* 101 */     -50, -37, -36, -43, -46, 
/* 102 */     -1, -8, -15, -10, -29, 
/* 103 */     -28, -19, -22, -73, -80, 
/* 104 */     -71, -66, -85, -84, -91, 
/* 105 */     -94, -113, -120, -127, -122, 
/* 106 */     -109, -108, -99, -102, 39, 32, 41, 
/* 107 */     46, 59, 60, 53, 50, 31, 24, 17, 22, 3, 4, 
/* 108 */     13, 10, 87, 80, 89, 94, 75, 76, 69, 66, 111, 
/* 109 */     104, 97, 102, 115, 116, 125, 122, -119, -114, 
/* 110 */     -121, -128, -107, -110, -101, 
/* 111 */     -100, -79, -74, -65, -72, 
/* 112 */     -83, -86, -93, -92, -7, 
/* 113 */     -2, -9, -16, -27, -30, 
/* 114 */     -21, -20, -63, -58, -49, 
/* 115 */     -56, -35, -38, -45, -44, 105, 
/* 116 */     110, 103, 96, 117, 114, 123, 124, 81, 86, 95, 88, 
/* 117 */     77, 74, 67, 68, 25, 30, 23, 16, 5, 2, 11, 
/* 118 */     12, 33, 38, 47, 40, 61, 58, 51, 52, 78, 73, 
/* 119 */     64, 71, 82, 85, 92, 91, 118, 113, 120, 127, 106, 
/* 120 */     109, 100, 99, 62, 57, 48, 55, 34, 37, 44, 43, 
/* 121 */     6, 1, 8, 15, 26, 29, 20, 19, -82, 
/* 122 */     -87, -96, -89, -78, -75, 
/* 123 */     -68, -69, -106, -111, -104, 
/* 124 */     -97, -118, -115, -124, -125, 
/* 125 */     -34, -39, -48, -41, -62, 
/* 126 */     -59, -52, -53, -26, -31, 
/* 127 */     -24, -17, -6, -3, -12, 
/* 128 */     -13 };
/*     */ 
/* 132 */   private static short[] m_crc16Table = { 
/* 133 */     0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 
/* 134 */     -32504, -28375, -24246, -20117, 
/* 135 */     -15988, -11859, -7730, -3601, 4657, 
/* 136 */     528, 12915, 8786, 21173, 17044, 29431, 25302, 
/* 137 */     -27847, -31976, -19589, -23718, 
/* 138 */     -11331, -15460, -3073, -7202, 9314, 
/* 139 */     13379, 1056, 5121, 25830, 29895, 17572, 21637, 
/* 140 */     -23190, -19125, -31448, -27383, 
/* 141 */     -6674, -2609, -14932, -10867, 13907, 
/* 142 */     9842, 5649, 1584, 30423, 26358, 22165, 18100, 
/* 143 */     -18597, -22662, -26855, -30920, 
/* 144 */     -2081, -6146, -10339, -14404, 18628, 
/* 145 */     22757, 26758, 30887, 2112, 6241, 10242, 14371, 
/* 146 */     -13876, -9747, -5746, -1617, 
/* 147 */     -30392, -26263, -22262, -18133, 23285, 
/* 148 */     19156, 31415, 27286, 6769, 2640, 14899, 10770, 
/* 149 */     -9219, -13348, -1089, -5218, 
/* 150 */     -25735, -29864, -17605, -21734, 27814, 
/* 151 */     31879, 19684, 23749, 11298, 15363, 3168, 7233, 
/* 152 */     -4690, -625, -12820, -8755, 
/* 153 */     -21206, -17141, -29336, -25271, 32407, 
/* 154 */     28342, 24277, 20212, 15891, 11826, 7761, 3696, 
/* 155 */     -97, -4162, -8227, -12292, 
/* 156 */     -16613, -20678, -24743, -28808, 
/* 157 */     -28280, -32343, -20022, -24085, 
/* 158 */     -12020, -16083, -3762, -7825, 4224, 
/* 159 */     161, 12482, 8419, 20484, 16421, 28742, 24679, 
/* 160 */     -31815, -27752, -23557, -19494, 
/* 161 */     -15555, -11492, -7297, -3234, 689, 
/* 162 */     4752, 8947, 13010, 16949, 21012, 25207, 29270, 
/* 163 */     -18966, -23093, -27224, -31351, 
/* 164 */     -2706, -6833, -10964, -15091, 13538, 
/* 165 */     9411, 5280, 1153, 29798, 25671, 21540, 17413, 
/* 166 */     -22565, -18438, -30823, -26696, 
/* 167 */     -6305, -2178, -14563, -10436, 9939, 
/* 168 */     14066, 1681, 5808, 26199, 30326, 17941, 22068, 
/* 169 */     -9908, -13971, -1778, -5841, 
/* 170 */     -26168, -30231, -18038, -22101, 22596, 
/* 171 */     18533, 30726, 26663, 6336, 2273, 14466, 10403, 
/* 172 */     -13443, -9380, -5313, -1250, 
/* 173 */     -29703, -25640, -21573, -17510, 19061, 
/* 174 */     23124, 27191, 31254, 2801, 6864, 10931, 14994, 
/* 175 */     -722, -4849, -8852, -12979, 
/* 176 */     -16982, -21109, -25112, -29239, 31782, 
/* 177 */     27655, 23652, 19525, 15522, 11395, 7392, 3265, 
/* 178 */     -4321, -194, -12451, -8324, 
/* 179 */     -20581, -16454, -28711, -24584, 28183, 
/* 180 */     32310, 20053, 24180, 11923, 16050, 3793, 7920 };
/*     */ 
/* 183 */   private static int[] m_crc32Table = new int[256];
/*     */ 
/*     */   static byte CalculateCrc8(int data)
/*     */   {
/*  16 */     byte crc = 0;
/*     */ 
/*  19 */     byte temp = (byte)(data >> 24);
/*  20 */     crc = m_crc8Table[(crc ^ temp)];
/*  21 */     temp = (byte)(data >> 16);
/*  22 */     crc = m_crc8Table[(crc ^ temp)];
/*  23 */     temp = (byte)(data >> 8);
/*  24 */     crc = m_crc8Table[(crc ^ temp)];
/*  25 */     temp = (byte)(data >> 0);
/*  26 */     crc = m_crc8Table[(crc ^ temp)];
/*     */ 
/*  28 */     return crc;
/*     */   }
/*     */ 
/*     */   static short CalculateCrc16(byte[] buf, int start, int end)
/*     */   {
/*  42 */     short crc = 0;
/*     */ 
/*  44 */     for (int counter = start; counter < end; counter++)
/*     */     {
/*  46 */       crc = (short)(crc << 8 ^ m_crc16Table[((crc >> 8 ^ buf[counter]) & 0xFF)]);
/*     */     }
/*     */ 
/*  49 */     return crc;
/*     */   }
/*     */ 
/*     */   static int CalculateCrc32(byte[] buf, int start, int end)
/*     */   {
/*  63 */     CRC32 crc = new CRC32();
/*     */ 
/*  65 */     crc.update(buf, start, end);
/*     */ 
/*  67 */     return (int)crc.getValue();
/*     */   }
/*     */ 
/*     */   protected Crc()
/*     */   {
/*  85 */     DoGenerateCrc32Table();
/*     */   }
/*     */ 
/*     */   private static void DoGenerateCrc32Table()
/*     */   {
/* 190 */     int ulPolynomial = 79764919;
/*     */ 
/* 195 */     for (int i = 0; i <= 255; i++)
/*     */     {
/* 197 */       m_crc32Table[i] = (Reflect(i, '\b') << 24);
/* 198 */       for (int j = 0; j < 8; j++)
/*     */       {
/* 200 */         if ((m_crc32Table[i] & 0x80000000) > 0)
/*     */         {
/* 202 */           m_crc32Table[i] = (m_crc32Table[i] << 1 ^ ulPolynomial);
/*     */         }
/*     */         else
/*     */         {
/* 206 */           m_crc32Table[i] <<= 1;
/*     */         }
/*     */       }
/* 209 */       m_crc32Table[i] = Reflect(m_crc32Table[i], ' ');
/*     */     }
/*     */   }
/*     */ 
/*     */   private static int Reflect(int reference, char ch)
/*     */   {
/* 219 */     int val = 0;
/*     */ 
/* 224 */     for (int i = 1; i < ch + '\001'; i++)
/*     */     {
/* 226 */       if ((reference & 0x1) > 0)
/*     */       {
/* 228 */         val |= '\001' << (char)(ch - i);
/*     */       }
/* 230 */       reference >>= 1;
/*     */     }
/* 232 */     return val;
/*     */   }
/*     */ }

/* Location:           C:\Documents and Settings\Boris-III\Desktop\G4 DevKit LP.jar
 * Qualified Name:     com.dexcom.G4DevKit.Crc
 * JD-Core Version:    0.6.0
 */